			面向对象高级

面向对象的三大特性：
	封装、继承、多态
1.多态
  一个类的多种形态
  ！！父类引用指向子类对象
  
  应用场景：
      方法传参时使用
  多态的特点：
      1）引用类型的转换
	upcasting 向上转型 ：子类对象转换为父类引用类型（隐式类型转换）
	downcasting  向下转型：父类对象 转换为子类引用类型(强制类型转换)
	！！向下类型转换时 一定需要先做容错
	    if( a instanceof Class){}
	    没有容错直接转换，会发生ClassCastException
      2)方法调用
	传递前为 Cat c  参数为Animal an
	方法中通过an调用方法时：是否能够调用取决于Animal中是否有该方法
			       调用的是哪个类中的方法取决于 具体为哪个类的对象
      3）如果需要调用子类中独有的功能
	 先将父类的引用类型转换为子类类型 才可以调用
	

练习：
     马戏团 有多个动物成员，
	小狗（小花）、猴子（小孙）、狗熊（大黑）、海狮（小琪），都能够做出场介绍
	猴子:骑车
	狗熊:跳火圈
        海狮:kiss
练习：
     开运动会，与会学生都需要喊口号"友谊第一"
	小姐姐：口号"加油"   能够跳啦啦操
	小哥哥：口号"yi二一"  能够长跑
     10个学生一组，3个普通学生、4个小姐姐、3个小哥哥
     随机一个学生，实现功能：1）喊口号 2）独有功能调用

2.final关键字 修饰符
  final：最终的、最后的
  final 修饰    类：孤寡老人类，不可被继承
		变量：
		     局部变量：可以先声明  再赋值一次
		     成员变量：一定需要在声明过程中赋值
		方法：最终的方法、不可被重写
  
  应用场景:1)类 	  不需要扩展当前类功能、  无需继承时使用
	   2）成员变量  修饰成员变量时 通常和static连用，将变量修饰为常量值
	   3）方法   不需要子类重写方法时使用 



3.抽象类
	




