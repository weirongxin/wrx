1.动态组件：
  <component :is=""></component>
  经典注册页面 
  在一个页面通过按钮切换输入区域的标签部分。

   <!--给组件 添加:is动态显示功能，显示showcom内容指定的组件-->     <component :is="showcom"></component>
  
2.组件实例的作用域是孤立的
   props是子组件访问父组件的唯一接口 
   特点:props单向绑定
   步骤：
   1)组件中添加
      Vue.component("comId",{
	pros:["参数名"]
      });
   2)组件内使用变量
     template:"<h1>{{参数名}}</h1>"
   3)传递vue中的数据到组件
     new Vue({
	el:"",
	data:{ msg:"hello"},
	methods:{}
     });
     <comId :参数名=“msg”></comId>

3.单向数据流：props是单向绑定数据
  父组件数据发生变化，传递给子组件，反过来不会。
  1)prop作为初始值传入后，子组件想当做局部数据
  2)prop作为原始数据传入，子组件处理成其他数据输出
  将组件内数据定义局部变量，可以对值修改
      Vue.component("comId",{
	pros:["参数名"],
	data:function(){
	    return {
		changeMsg:this.参数名
	    };
	}
      });


4.父组件通过props传递给子组件数据
   子组件通过$emit将数据传递给父组件
   步骤：
   vue传递数据给组件
   1)组件定义props
     props:["data1"]
   2)vue定义传递的数据
     data:{msg:""}
   3)标签，进行传值
     <组件   :data1="msg">
   组件发送数据给vue
   1)组件相应的方法内 定义发射功能
     this.$emit("发射方法",参数);
   2)vue内接受发射的方法
     methods:{ getSend(){}}
   3)使用组件标签时  关联方法
     <组件 @发射方法=“getSend”>