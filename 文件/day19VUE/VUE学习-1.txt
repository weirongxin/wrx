1.VUE入门
   VUE.js  构建前端的框架
   基于mvvm设计模式构建前端页面
   开发者：尤雨溪   

2.特点：
   将视图和数据进行双向绑定
   
3.第一个vue
   由于vue的双向绑定特点，需要将vue绑定到    父级标签   才能使用vue对象里面的数据
	步骤： 1）在需要使用vue的页面引入 vue.js
	       2) 在script标签中实例化 vue 对象
	       3）在vue对象中进行 绑定参数设定
	格式：在script标签中
		<script>
		  onload = function(){
				//页面加载完成时实例化vue对象  
				//实例化时  设定绑定的  参数/数据/方法
				//el: 传入标签选择器  绑定标签
				//data:绑定的数据
				//method:绑定的方法
				new Vue({
					el:"#bgDiv",
					data:{
						msg:"hello world Vue",
						qwe:"你好！"
					},
					methods:{
						
					}
				});
			}
		</script>
4.指令：常用
  1).v-model 双向数据绑定，一般表单元素
   示例：输入框内容，即时在下面显示   
     格式：<div id="bgDiv">
		用户名：<input type="text" v-model="userName"/><br/>
		{{userName}}
	   </div>
  2)v-for 循环(数组、对象)         格式：v-for="元素  in  数据源"
   数组：
     <li v-for="value in user">{{value}}</li>
   数组、对象
     v-for="(v,k) in user"
     v-for="user in users"
    	{{user.id}}  {{user.name}}
   索引和对象集合
     v-for="(user,index) in users"
	{{index}}  {{user.id}}
  提高数据变更时，li加载数据的效率
  <li  v-for="(v,k) in arr2" :key="k">
  {{v}}</li>
5.事件绑定
  v-on:事件 = “函数”
  (事件中访问其他数据时 this
   事件没有参数时可以不用() 
   )
  eg:点击按钮 数组中添加元素
6.元素的显示和隐藏
  v-show/v-if
  v-show通过display: none block
  v-if每次删除后重建
  eg:点击按钮隐藏div
7.案例
  用户管理
  上方录入用户信息
  下方显示用户列表(可以添加删除操作)
8.事件
   1)事件绑定 v-on:click=""
   简写方式：@click=""
   eg:点击按钮显示隐藏div
   2)事件对象的获取$event
     包含事件相关的信息、源、类型、坐标等
   eg：点击按钮获取按钮上的文字
        @click=“show($event)”
        方法内 e.target.innerHTML
   3)事件冒泡
      @click.stop="show"
      阻止当前标签的事件响应往上层冒泡
   4)事件默认行为
   5)键盘事件
    @keydown=("show($event)")
     方法内:e.keyCode
    简化写法：
    @keydown.13="print"
    @keydown.enter="print"
   6)事件修饰符
      @click.once  该事件只触发一次
9 属性
1)   v-bind:属性名=“vue中属性的名字”
   eg：在img中显示url图片
 简写：
   v-bind:src="url"
   ==> :src="url"
2)class和style属性
    style中样式 .aa   .cc
    data中数据 bb:"aa" dd:"cc"
  使用时：
  方式1：
     <p :class="bb">
  方式2：
     <p :class="[bb,dd]">
  方式3：
     <p :class="{aa:true,cc:flag}"
  eg:根据条件判断应用样式
    :class="{aa:num>0}"
  eg:在data中添加属性
     hello:{aa:true,cc:true}
    :class="hello "
 
 


   

