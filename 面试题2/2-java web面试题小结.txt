1.CSS样式的定义方式：
   1)行内样式  标签style属性后添加样式串
   2)文件内样式  head标签间 添加style标签，添加指定样式
   3)外部样式表  定义.css文件，通过link引入
2.盒模型问题：
  标签的分类：
  行标签、块标签、内联块
  改变标签的属性：p   display：inline/block/inline-block

  静态页面的标签定位的方式：
  1)盒模型  
    标签的宽/高=width+2*border+2*padding+2*margin
  2)定位 
    固定 position:fixed  浏览器
    相对 position:relative 原来位置
    绝对 position:absolute 参照物为相对定位元素
  3)浮动 只能水平浮动
     float：left/right
    清浮动：
     .clear:after{
	content:"",
	display:block,
	clear:both
     }
3.首页-滑过某标题后出现下拉目录，怎么实现？
   标题添加hover伪类
   目录标签定义display:hidden，当hover时display:block
  伪类：
      link visited hover active
  只有hover伪类可以被其他标签使用
4.AJAX应用和传统Web应用有什么不同？
  前端请求到服务器几种方式：
   1)ajax
   2)form表单
      submit ---提交前校验 form标签添加onsubmit="return check()"
      button ---触发js方法 在方法中document.form[0].submit()
   3)button 的 onclick="js()"
      方法中 location.href=""
   4)a标签  href=“”

  Web应用：请求提交到servlet或者jsp，处理完成后转发、重定向到一个页面。结果页面完全需要重新加载。
  Ajax应用：在当前请求页面处发出异步请求，结果接收到后，局部刷新数据
   
5.forward、redirect区别
  1)转发同一个地址
    重定向地址栏变化
  2)转发一个request对象
    重定向两个request
  3)转发能够通过request传递参数
    重定向不能
 
6.get和post区别；
  请求方式不同
  1)get将数据拼接在地址栏
    post地址栏为请求url，数据以表单提交
  2)get数据存在大小限制1kb
    post数据没有大小限制
  3)get不安全、效率高
    post安全、效率相对低
  4)实际开发时 有密码用post、没有用get
     但部分网站应用，可以通过get再次转发的方式，实现登录功能
7.Cookie和Session
   用来存储客户端到服务器端会话状态的数据
  1)Cookieid和Sessionid都是由服务器端创建
  2)Cookie存储在客户端
    Sesssion存储在服务器端
  3)Cookie：会话期(浏览器关闭消亡)、持久化(setMaxAge设置时效)
    Session：默认服务器端保存30min、可以设置时效
  4)Cookie应用:书籍的浏览记录(不需要联网数据)、记住用户名
    Session应用：购物车数据(需要联网)、
	        自动登录(第一次登录传入服务器，验证成功后将User对象存入session。再次登录时，直接使用session中的登录信息)
  5)Cookie只能存字符串、Session可存对象
  6)实现原理、过程
    用户请求服务器端，服务器先校验是否存在cookieid,如果没有则新建id。再校验是否存在sessionid，没有则创建session对象。将sessionid存入响应用户的信息中。用户拿到服务器端响应，根据cookieid创建cookie(浏览器操作)，cookie对象中包含sessionid。
     再次请求时，用户会自动将已经存才的sessionid和cookieid传递给服务器端，服务器端校验：id存在则不创建、id不存在则新建。
  （有用户决定是否创建session和cookie(根据id)，创建的cookie在用户端存，创建的session在服务器端存）
